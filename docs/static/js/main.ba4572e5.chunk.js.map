{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACbC,mBAAS,IADI,mBAC1CC,EAD0C,KAC9BC,EAD8B,KAejD,OACC,0BAAMC,SATc,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAS,IACvBP,GAAc,SAACQ,GAAD,OAAUN,GAAV,mBAAyBM,OACvCL,EAAc,OAMd,2BAAOM,KAAK,OAAOC,MAAOR,EAAYS,SAdnB,SAACN,GACrBF,EAAcE,EAAEO,OAAOF,UActB,4BAAQD,KAAK,UAAb,Y,uBCpBUI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDAEuBC,UAAWH,GAFlC,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAClC,OACE,yBAAKc,UAAU,QACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACfb,mBAAS,CAClCoB,KAAM,GACNa,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACTxB,EAAQC,GAAUwB,MAAK,SAACC,GACvBH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAGT,CAACpB,IAEGqB,EDZ2BK,CAAa1B,GAAjCa,EAD0B,EAChCN,KAAca,EADkB,EAClBA,QAEtB,OACC,oCACC,4BAAKpB,GACJoB,GAAW,0CACZ,yBAAKJ,UAAU,aACbH,EAAOJ,KAAI,SAACC,GAAD,OACX,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEVtBkB,EAAe,WAAO,IAAD,EACGzC,mBAAS,CAAC,SADb,mBAC1B0C,EAD0B,KACd3C,EADc,KAGjC,OACC,6BACC,+CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BACE2C,EAAWpB,KAAI,SAACT,GAAD,OAEd,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCVxC8B,IAASC,OACR,kBAAC,EAAD,MAEAC,SAASC,eAAe,U","file":"static/js/main.ba4572e5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (inputValue.length > 2) {\r\n\t\t\tsetCategories((cat) => [inputValue, ...cat ]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type=\"text\" value={inputValue} onChange={handleChange} />\r\n\t\t\t<button type=\"submit\">Submit</button>\r\n\t\t</form>\r\n\t);\r\n};\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n","\r\nexport const getGifs = async (category) => {\r\n  const url =\r\n    `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=UPD6n9abYblrMXTpJp07QyqzahLNsovt`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n \r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n  return (\r\n    <div className='card'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n    \r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from './hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{category}</h3>\r\n\t\t\t{loading && <p>Loading....</p>}\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{images.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nGifGrid.propTypes = {\r\n\tcategory: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) => {\r\n\t\t\tsetState({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t});\r\n\t}, [category]);\r\n\t\r\n\treturn state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['love']);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2> Gif expert app</h2>\r\n\t\t\t<hr />\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<ul>\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t\t\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\t<GifExpertApp />,\n\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}